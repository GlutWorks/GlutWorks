
--- sv_crafting
function addResource(player, smelter, name, amt)
    if amt < 0 then amt = 0 end -- intentional redundency
        
    local totalAmt = 0
    for _, item in pairs(player:GetCharacter():GetInventory():GetItems()) do
        if item.uniqueID == name then
            if (item:GetData("quantity", 1)) then
                totalAmt = totalAmt + item:GetData("quantity", 1)
            else							-- this is not required
                totalAmt = totalAmt + 1		-- but preserved for 
            end								-- safety and resusability
        end
    end
    
    if totalAmt < amt then
        player:Notify("You don't have enough "..name.." to smelt!")
        return
    end
    
    smelter:SetNetVar(name, smelter:GetNetVar(name) + amt, ents.FindByClass("player"))
    for _, item in pairs(player:GetCharacter():GetInventory():GetItems()) do
        if item.uniqueID == name then
            if item:GetData("quantity", 1) > amt then
                item:SetData("quantity", item:GetData("quantity", 1) - amt)
                break
            else
                amt = amt - item:GetData("quantity", 1)
                item:Remove()
            end
        end
    end
    net.Start("glutCraftRedraw"); net.WriteEntity(smelter); net.Broadcast()
end

function startSmelt(smelter)
    for _, resource in pairs(smelter.GetResources()) do
        if resource == "metal_scrap" then continue end
        if smelter:GetNetVar(resource) > 0 then
            smelter:SetNetVar(resource, smelter:GetNetVar(resource) - 1, ents.FindByClass("player"))
            smelter:SetNetVar("TimeToSmelt", 10, ents.FindByClass("player"))

            smeltTimer = timer.Create("smeltTimer", 1, 10, function()
                print(smelter:GetNetVar("TimeToSmelt"))
                smelter:SetNetVar("TimeToSmelt", smelter:GetNetVar("TimeToSmelt") - 1, ents.FindByClass("player"))
                net.Start("glutCraftRedraw"); net.WriteEntity(smelter); net.Broadcast()
                if (smelter:GetNetVar("TimeToSmelt") == 0) then
                    smelter:SetNetVar("metal_scrap", smelter:GetNetVar("metal_scrap") + 1, ents.FindByClass("player"))
                    net.Start("glutCraftRedraw"); net.WriteEntity(smelter); net.Broadcast()
                    timer.Remove("smeltTimer")
                end
            end)
        end
    end
end

--- ix_interactive_smelter

	net.Receive( "glutUse", function(_, _)
		smeltWin.OpenWindow(net.ReadEntity())
	end )

	function smeltWin.OpenWindow(smelter)
	
		if IsValid(smeltWin.Menu) then
			smeltWin.Menu:Remove()
		end
		local scrw, scrh = ScrW(), ScrH()
		smeltWin.Menu = vgui.Create("DFrame")
			smeltWin.Menu:SetSize(scrw * 0.5, scrh * 0.5)
			smeltWin.Menu:Center()
			smeltWin.Menu:SetTitle("Smelter")
			smeltWin.Menu:SetDraggable(true)
			smeltWin.Menu:MakePopup(true)
			smeltWin.Menu:ShowCloseButton(true)

		enterResourceAmt = {}
		for _, name in pairs(inputs) do
			enterResourceAmt[name] = smeltWin.Menu:Add("DTextEntry", frame)
		end
	
		local resourceTable = smeltWin.Menu:Add("DListView")
			resourceTable:Dock(FILL)
			resourceTable:SetMultiSelect(false)
			resourceTable:AddColumn("Resource")
			resourceTable:AddColumn("Amount")
			resourceTable:AddColumn("Add Amount")

		for _, name in pairs(inputs) do
			resourceTable:AddLine(name, smelter:GetNetVar(name), enterResourceAmt[name])
		end
	
		local addBut = smeltWin.Menu:Add("DButton")
		addBut:SetText("Add Resource")
		addBut:Dock(BOTTOM)
		addBut.DoClick = function()
			for _, name in pairs(inputs) do
				local amt = tonumber(enterResourceAmt[name]:GetText())
				if amt == nil then
					continue
				elseif amt <= 0 then 
					continue
				end
				net.Start("glutAddResource")
					net.WriteUInt(LocalPlayer():UserID(), 8)
					net.WriteEntity(smelter)
					net.WriteString(name)
					net.WriteInt(amt, 8)
				net.SendToServer()
			end
		end

		local smeltBut = smeltWin.Menu:Add("DButton")
		smeltBut:SetText("Smelt")
		smeltBut:Dock(BOTTOM)
		smeltBut.DoClick = function()
			net.Start("glutSmelt")
				net.WriteEntity(smelter)
			net.SendToServer()
		end
	end
end